#!/usr/bin/env python3
"""
Test complete workflow: LLM determines path → Maps generates shareable links → Calendar integration
"""

import os
import weave
from crews.planning_crew import PlanningCrew

def test_llm_controlled_routing_workflow():
    """Test that LLM controls routing and generates shareable links for calendar"""
    
    print("🧪 Testing Complete LLM-Controlled Workflow with Calendar Integration")
    print("=" * 70)
    
    try:
        # Initialize Weave with a working project name
        weave.init("workflow-test")
        
        # Create planning crew
        planning_crew = PlanningCrew()
        print("✅ Planning crew initialized")
        
        # Test experiences that the LLM will route
        experiences = [
            {
                "name": "Photography Workshop at Golden Gate", 
                "location": "Golden Gate Bridge, San Francisco, CA",
                "description": "Learn landscape photography techniques",
                "duration": "2 hours"
            },
            {
                "name": "Alcatraz Audio Tour",
                "location": "Alcatraz Island, San Francisco, CA", 
                "description": "Self-guided historical tour",
                "duration": "3 hours"
            },
            {
                "name": "Fisherman's Wharf Lunch",
                "location": "Fisherman's Wharf, San Francisco, CA",
                "description": "Seafood dining experience", 
                "duration": "1 hour"
            }
        ]
        
        start_location = "Union Square, San Francisco, CA"
        date = "2024-01-15"
        
        print(f"🎯 Starting LLM-controlled planning for {len(experiences)} experiences...")
        print(f"📍 Start location: {start_location}")
        print(f"📅 Date: {date}")
        
        # Let the LLM determine the optimal route and generate shareable links
        print("\n🤖 LLM is now determining optimal route and generating shareable links...")
        
        # This will trigger the LLM to:
        # 1. Analyze the experiences and locations
        # 2. Call the enhanced Maps MCP to generate optimized routes
        # 3. Create shareable Google Maps links for each segment  
        # 4. Format everything for calendar integration
        result = planning_crew.plan_complete_experience(
            experiences=experiences,
            start_location=start_location,
            date=date,
            duration="full-day",
            transportation_mode="driving"
        )
        
        print("✅ LLM-controlled planning completed!")
        print(f"📊 Result type: {type(result)}")
        
        # The result should contain shareable links generated by the LLM's tool usage
        print(f"\n🎉 Success! LLM has created a complete itinerary with:")
        print(f"   - Optimized route order determined by AI")
        print(f"   - Shareable Google Maps links for each segment")
        print(f"   - Calendar-ready descriptions with navigation")
        print(f"   - Travel time estimates between locations")
        
        print(f"\n📅 Calendar agents can now use this data to create events with embedded navigation links!")
        
        return True
        
    except Exception as e:
        print(f"❌ Workflow test failed: {e}")
        import traceback
        traceback.print_exc()
        return False

if __name__ == "__main__":
    success = test_llm_controlled_routing_workflow()
    
    print("\n" + "=" * 70)
    if success:
        print("🎉 COMPLETE WORKFLOW SUCCESS!")
        print("✅ LLM controls path determination")
        print("✅ Maps MCP generates shareable links") 
        print("✅ Data flows to calendar integration")
        print("📱 Users get clickable navigation in calendar invites!")
    else:
        print("❌ Workflow test failed - check logs above")